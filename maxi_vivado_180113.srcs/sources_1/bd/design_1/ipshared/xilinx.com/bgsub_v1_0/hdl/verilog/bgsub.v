// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bgsub,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.575400,HLS_SYN_LAT=3210724,HLS_SYN_TPT=3210725,HLS_SYN_MEM=68,HLS_SYN_DSP=40,HLS_SYN_FF=17595,HLS_SYN_LUT=27304}" *)

module bgsub (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem_offset_AWVALID,
        m_axi_gmem_offset_AWREADY,
        m_axi_gmem_offset_AWADDR,
        m_axi_gmem_offset_AWID,
        m_axi_gmem_offset_AWLEN,
        m_axi_gmem_offset_AWSIZE,
        m_axi_gmem_offset_AWBURST,
        m_axi_gmem_offset_AWLOCK,
        m_axi_gmem_offset_AWCACHE,
        m_axi_gmem_offset_AWPROT,
        m_axi_gmem_offset_AWQOS,
        m_axi_gmem_offset_AWREGION,
        m_axi_gmem_offset_AWUSER,
        m_axi_gmem_offset_WVALID,
        m_axi_gmem_offset_WREADY,
        m_axi_gmem_offset_WDATA,
        m_axi_gmem_offset_WSTRB,
        m_axi_gmem_offset_WLAST,
        m_axi_gmem_offset_WID,
        m_axi_gmem_offset_WUSER,
        m_axi_gmem_offset_ARVALID,
        m_axi_gmem_offset_ARREADY,
        m_axi_gmem_offset_ARADDR,
        m_axi_gmem_offset_ARID,
        m_axi_gmem_offset_ARLEN,
        m_axi_gmem_offset_ARSIZE,
        m_axi_gmem_offset_ARBURST,
        m_axi_gmem_offset_ARLOCK,
        m_axi_gmem_offset_ARCACHE,
        m_axi_gmem_offset_ARPROT,
        m_axi_gmem_offset_ARQOS,
        m_axi_gmem_offset_ARREGION,
        m_axi_gmem_offset_ARUSER,
        m_axi_gmem_offset_RVALID,
        m_axi_gmem_offset_RREADY,
        m_axi_gmem_offset_RDATA,
        m_axi_gmem_offset_RLAST,
        m_axi_gmem_offset_RID,
        m_axi_gmem_offset_RUSER,
        m_axi_gmem_offset_RRESP,
        m_axi_gmem_offset_BVALID,
        m_axi_gmem_offset_BREADY,
        m_axi_gmem_offset_BRESP,
        m_axi_gmem_offset_BID,
        m_axi_gmem_offset_BUSER
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    ap_const_logic_1 = 1'b1;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM_OFFSET_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_OFFSET_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_OFFSET_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_OFFSET_CACHE_VALUE = 3;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (C_S_AXI_CRTL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_GMEM_OFFSET_WSTRB_WIDTH = (C_M_AXI_GMEM_OFFSET_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
output   m_axi_gmem_offset_AWVALID;
input   m_axi_gmem_offset_AWREADY;
output  [C_M_AXI_GMEM_OFFSET_ADDR_WIDTH - 1 : 0] m_axi_gmem_offset_AWADDR;
output  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_AWID;
output  [7:0] m_axi_gmem_offset_AWLEN;
output  [2:0] m_axi_gmem_offset_AWSIZE;
output  [1:0] m_axi_gmem_offset_AWBURST;
output  [1:0] m_axi_gmem_offset_AWLOCK;
output  [3:0] m_axi_gmem_offset_AWCACHE;
output  [2:0] m_axi_gmem_offset_AWPROT;
output  [3:0] m_axi_gmem_offset_AWQOS;
output  [3:0] m_axi_gmem_offset_AWREGION;
output  [C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH - 1 : 0] m_axi_gmem_offset_AWUSER;
output   m_axi_gmem_offset_WVALID;
input   m_axi_gmem_offset_WREADY;
output  [C_M_AXI_GMEM_OFFSET_DATA_WIDTH - 1 : 0] m_axi_gmem_offset_WDATA;
output  [C_M_AXI_GMEM_OFFSET_WSTRB_WIDTH - 1 : 0] m_axi_gmem_offset_WSTRB;
output   m_axi_gmem_offset_WLAST;
output  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_WID;
output  [C_M_AXI_GMEM_OFFSET_WUSER_WIDTH - 1 : 0] m_axi_gmem_offset_WUSER;
output   m_axi_gmem_offset_ARVALID;
input   m_axi_gmem_offset_ARREADY;
output  [C_M_AXI_GMEM_OFFSET_ADDR_WIDTH - 1 : 0] m_axi_gmem_offset_ARADDR;
output  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_ARID;
output  [7:0] m_axi_gmem_offset_ARLEN;
output  [2:0] m_axi_gmem_offset_ARSIZE;
output  [1:0] m_axi_gmem_offset_ARBURST;
output  [1:0] m_axi_gmem_offset_ARLOCK;
output  [3:0] m_axi_gmem_offset_ARCACHE;
output  [2:0] m_axi_gmem_offset_ARPROT;
output  [3:0] m_axi_gmem_offset_ARQOS;
output  [3:0] m_axi_gmem_offset_ARREGION;
output  [C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH - 1 : 0] m_axi_gmem_offset_ARUSER;
input   m_axi_gmem_offset_RVALID;
output   m_axi_gmem_offset_RREADY;
input  [C_M_AXI_GMEM_OFFSET_DATA_WIDTH - 1 : 0] m_axi_gmem_offset_RDATA;
input   m_axi_gmem_offset_RLAST;
input  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_RID;
input  [C_M_AXI_GMEM_OFFSET_RUSER_WIDTH - 1 : 0] m_axi_gmem_offset_RUSER;
input  [1:0] m_axi_gmem_offset_RRESP;
input   m_axi_gmem_offset_BVALID;
output   m_axi_gmem_offset_BREADY;
input  [1:0] m_axi_gmem_offset_BRESP;
input  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_BID;
input  [C_M_AXI_GMEM_OFFSET_BUSER_WIDTH - 1 : 0] m_axi_gmem_offset_BUSER;

reg    ap_rst_n_inv;
wire    bgsub_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [31:0] frame_in;
wire   [31:0] frame_out;
wire   [31:0] bgmodel;
wire    bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
reg    ap_idle;
wire    init;
wire    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWADDR;
wire   [0:0] gmem_AWID;
wire   [31:0] gmem_AWLEN;
wire   [2:0] gmem_AWSIZE;
wire   [1:0] gmem_AWBURST;
wire   [1:0] gmem_AWLOCK;
wire   [3:0] gmem_AWCACHE;
wire   [2:0] gmem_AWPROT;
wire   [3:0] gmem_AWQOS;
wire   [3:0] gmem_AWREGION;
wire   [0:0] gmem_AWUSER;
wire    gmem_WVALID;
wire    gmem_WREADY;
wire   [7:0] gmem_WDATA;
wire   [0:0] gmem_WSTRB;
wire    gmem_WLAST;
wire   [0:0] gmem_WID;
wire   [0:0] gmem_WUSER;
wire    gmem_ARVALID;
wire    gmem_ARREADY;
wire   [31:0] gmem_ARADDR;
wire   [0:0] gmem_ARID;
wire   [31:0] gmem_ARLEN;
wire   [2:0] gmem_ARSIZE;
wire   [1:0] gmem_ARBURST;
wire   [1:0] gmem_ARLOCK;
wire   [3:0] gmem_ARCACHE;
wire   [2:0] gmem_ARPROT;
wire   [3:0] gmem_ARQOS;
wire   [3:0] gmem_ARREGION;
wire   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
wire    gmem_RREADY;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    bgsub_gmem_m_axi_U_ap_dummy_ce;
wire    gmem_offset_AWVALID;
wire    gmem_offset_AWREADY;
wire   [31:0] gmem_offset_AWADDR;
wire   [0:0] gmem_offset_AWID;
wire   [31:0] gmem_offset_AWLEN;
wire   [2:0] gmem_offset_AWSIZE;
wire   [1:0] gmem_offset_AWBURST;
wire   [1:0] gmem_offset_AWLOCK;
wire   [3:0] gmem_offset_AWCACHE;
wire   [2:0] gmem_offset_AWPROT;
wire   [3:0] gmem_offset_AWQOS;
wire   [3:0] gmem_offset_AWREGION;
wire   [0:0] gmem_offset_AWUSER;
wire    gmem_offset_WVALID;
wire    gmem_offset_WREADY;
wire   [31:0] gmem_offset_WDATA;
wire   [3:0] gmem_offset_WSTRB;
wire    gmem_offset_WLAST;
wire   [0:0] gmem_offset_WID;
wire   [0:0] gmem_offset_WUSER;
wire    gmem_offset_ARVALID;
wire    gmem_offset_ARREADY;
wire   [31:0] gmem_offset_ARADDR;
wire   [0:0] gmem_offset_ARID;
wire   [31:0] gmem_offset_ARLEN;
wire   [2:0] gmem_offset_ARSIZE;
wire   [1:0] gmem_offset_ARBURST;
wire   [1:0] gmem_offset_ARLOCK;
wire   [3:0] gmem_offset_ARCACHE;
wire   [2:0] gmem_offset_ARPROT;
wire   [3:0] gmem_offset_ARQOS;
wire   [3:0] gmem_offset_ARREGION;
wire   [0:0] gmem_offset_ARUSER;
wire    gmem_offset_RVALID;
wire    gmem_offset_RREADY;
wire   [31:0] gmem_offset_RDATA;
wire    gmem_offset_RLAST;
wire   [0:0] gmem_offset_RID;
wire   [0:0] gmem_offset_RUSER;
wire   [1:0] gmem_offset_RRESP;
wire    gmem_offset_BVALID;
wire    gmem_offset_BREADY;
wire   [1:0] gmem_offset_BRESP;
wire   [0:0] gmem_offset_BID;
wire   [0:0] gmem_offset_BUSER;
wire    bgsub_gmem_offset_m_axi_U_ap_dummy_ce;
wire    bgsub_Block_proc_U0_ap_start;
wire    bgsub_Block_proc_U0_ap_done;
wire    bgsub_Block_proc_U0_ap_continue;
wire    bgsub_Block_proc_U0_ap_idle;
wire    bgsub_Block_proc_U0_ap_ready;
wire   [0:0] bgsub_Block_proc_U0_init;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY;
wire   [31:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWID;
wire   [31:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN;
wire   [2:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE;
wire   [1:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST;
wire   [1:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE;
wire   [2:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_WVALID;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_WREADY;
wire   [31:0] bgsub_Block_proc_U0_m_axi_bgmodel_WDATA;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_WLAST;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_WID;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_WUSER;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY;
wire   [31:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARID;
wire   [31:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN;
wire   [2:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE;
wire   [1:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST;
wire   [1:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE;
wire   [2:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS;
wire   [3:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_RVALID;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_RREADY;
wire   [31:0] bgsub_Block_proc_U0_m_axi_bgmodel_RDATA;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_RLAST;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_RID;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_RUSER;
wire   [1:0] bgsub_Block_proc_U0_m_axi_bgmodel_RRESP;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_BVALID;
wire    bgsub_Block_proc_U0_m_axi_bgmodel_BREADY;
wire   [1:0] bgsub_Block_proc_U0_m_axi_bgmodel_BRESP;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_BID;
wire   [0:0] bgsub_Block_proc_U0_m_axi_bgmodel_BUSER;
wire   [31:0] bgsub_Block_proc_U0_bgmodel1;
wire    bgsub_Block_proc_U0_m_axi_frame_out_AWVALID;
wire    bgsub_Block_proc_U0_m_axi_frame_out_AWREADY;
wire   [31:0] bgsub_Block_proc_U0_m_axi_frame_out_AWADDR;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_AWID;
wire   [31:0] bgsub_Block_proc_U0_m_axi_frame_out_AWLEN;
wire   [2:0] bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE;
wire   [1:0] bgsub_Block_proc_U0_m_axi_frame_out_AWBURST;
wire   [1:0] bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK;
wire   [3:0] bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE;
wire   [2:0] bgsub_Block_proc_U0_m_axi_frame_out_AWPROT;
wire   [3:0] bgsub_Block_proc_U0_m_axi_frame_out_AWQOS;
wire   [3:0] bgsub_Block_proc_U0_m_axi_frame_out_AWREGION;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_AWUSER;
wire    bgsub_Block_proc_U0_m_axi_frame_out_WVALID;
wire    bgsub_Block_proc_U0_m_axi_frame_out_WREADY;
wire   [7:0] bgsub_Block_proc_U0_m_axi_frame_out_WDATA;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_WSTRB;
wire    bgsub_Block_proc_U0_m_axi_frame_out_WLAST;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_WID;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_WUSER;
wire    bgsub_Block_proc_U0_m_axi_frame_out_ARVALID;
wire    bgsub_Block_proc_U0_m_axi_frame_out_ARREADY;
wire   [31:0] bgsub_Block_proc_U0_m_axi_frame_out_ARADDR;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_ARID;
wire   [31:0] bgsub_Block_proc_U0_m_axi_frame_out_ARLEN;
wire   [2:0] bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE;
wire   [1:0] bgsub_Block_proc_U0_m_axi_frame_out_ARBURST;
wire   [1:0] bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK;
wire   [3:0] bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE;
wire   [2:0] bgsub_Block_proc_U0_m_axi_frame_out_ARPROT;
wire   [3:0] bgsub_Block_proc_U0_m_axi_frame_out_ARQOS;
wire   [3:0] bgsub_Block_proc_U0_m_axi_frame_out_ARREGION;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_ARUSER;
wire    bgsub_Block_proc_U0_m_axi_frame_out_RVALID;
wire    bgsub_Block_proc_U0_m_axi_frame_out_RREADY;
wire   [7:0] bgsub_Block_proc_U0_m_axi_frame_out_RDATA;
wire    bgsub_Block_proc_U0_m_axi_frame_out_RLAST;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_RID;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_RUSER;
wire   [1:0] bgsub_Block_proc_U0_m_axi_frame_out_RRESP;
wire    bgsub_Block_proc_U0_m_axi_frame_out_BVALID;
wire    bgsub_Block_proc_U0_m_axi_frame_out_BREADY;
wire   [1:0] bgsub_Block_proc_U0_m_axi_frame_out_BRESP;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_BID;
wire   [0:0] bgsub_Block_proc_U0_m_axi_frame_out_BUSER;
wire   [31:0] bgsub_Block_proc_U0_frame_out2;
wire   [31:0] bgsub_Block_proc_U0_frame_in;
reg    ap_reg_procdone_bgsub_Block_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_CS;
wire    ap_sig_top_allready;
wire    ap_sig_hs_continue;


bgsub_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
bgsub_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( bgsub_AXILiteS_s_axi_U_ap_dummy_ce ),
    .frame_in( frame_in ),
    .frame_out( frame_out ),
    .bgmodel( bgmodel )
);

bgsub_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
bgsub_CRTL_BUS_s_axi_U(
    .AWVALID( s_axi_CRTL_BUS_AWVALID ),
    .AWREADY( s_axi_CRTL_BUS_AWREADY ),
    .AWADDR( s_axi_CRTL_BUS_AWADDR ),
    .WVALID( s_axi_CRTL_BUS_WVALID ),
    .WREADY( s_axi_CRTL_BUS_WREADY ),
    .WDATA( s_axi_CRTL_BUS_WDATA ),
    .WSTRB( s_axi_CRTL_BUS_WSTRB ),
    .ARVALID( s_axi_CRTL_BUS_ARVALID ),
    .ARREADY( s_axi_CRTL_BUS_ARREADY ),
    .ARADDR( s_axi_CRTL_BUS_ARADDR ),
    .RVALID( s_axi_CRTL_BUS_RVALID ),
    .RREADY( s_axi_CRTL_BUS_RREADY ),
    .RDATA( s_axi_CRTL_BUS_RDATA ),
    .RRESP( s_axi_CRTL_BUS_RRESP ),
    .BVALID( s_axi_CRTL_BUS_BVALID ),
    .BREADY( s_axi_CRTL_BUS_BREADY ),
    .BRESP( s_axi_CRTL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .init( init )
);

bgsub_gmem_m_axi #(
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
bgsub_gmem_m_axi_U(
    .AWVALID( m_axi_gmem_AWVALID ),
    .AWREADY( m_axi_gmem_AWREADY ),
    .AWADDR( m_axi_gmem_AWADDR ),
    .AWID( m_axi_gmem_AWID ),
    .AWLEN( m_axi_gmem_AWLEN ),
    .AWSIZE( m_axi_gmem_AWSIZE ),
    .AWBURST( m_axi_gmem_AWBURST ),
    .AWLOCK( m_axi_gmem_AWLOCK ),
    .AWCACHE( m_axi_gmem_AWCACHE ),
    .AWPROT( m_axi_gmem_AWPROT ),
    .AWQOS( m_axi_gmem_AWQOS ),
    .AWREGION( m_axi_gmem_AWREGION ),
    .AWUSER( m_axi_gmem_AWUSER ),
    .WVALID( m_axi_gmem_WVALID ),
    .WREADY( m_axi_gmem_WREADY ),
    .WDATA( m_axi_gmem_WDATA ),
    .WSTRB( m_axi_gmem_WSTRB ),
    .WLAST( m_axi_gmem_WLAST ),
    .WID( m_axi_gmem_WID ),
    .WUSER( m_axi_gmem_WUSER ),
    .ARVALID( m_axi_gmem_ARVALID ),
    .ARREADY( m_axi_gmem_ARREADY ),
    .ARADDR( m_axi_gmem_ARADDR ),
    .ARID( m_axi_gmem_ARID ),
    .ARLEN( m_axi_gmem_ARLEN ),
    .ARSIZE( m_axi_gmem_ARSIZE ),
    .ARBURST( m_axi_gmem_ARBURST ),
    .ARLOCK( m_axi_gmem_ARLOCK ),
    .ARCACHE( m_axi_gmem_ARCACHE ),
    .ARPROT( m_axi_gmem_ARPROT ),
    .ARQOS( m_axi_gmem_ARQOS ),
    .ARREGION( m_axi_gmem_ARREGION ),
    .ARUSER( m_axi_gmem_ARUSER ),
    .RVALID( m_axi_gmem_RVALID ),
    .RREADY( m_axi_gmem_RREADY ),
    .RDATA( m_axi_gmem_RDATA ),
    .RLAST( m_axi_gmem_RLAST ),
    .RID( m_axi_gmem_RID ),
    .RUSER( m_axi_gmem_RUSER ),
    .RRESP( m_axi_gmem_RRESP ),
    .BVALID( m_axi_gmem_BVALID ),
    .BREADY( m_axi_gmem_BREADY ),
    .BRESP( m_axi_gmem_BRESP ),
    .BID( m_axi_gmem_BID ),
    .BUSER( m_axi_gmem_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( bgsub_gmem_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem_ARVALID ),
    .I_ARREADY( gmem_ARREADY ),
    .I_ARADDR( gmem_ARADDR ),
    .I_ARID( gmem_ARID ),
    .I_ARLEN( gmem_ARLEN ),
    .I_ARSIZE( gmem_ARSIZE ),
    .I_ARLOCK( gmem_ARLOCK ),
    .I_ARCACHE( gmem_ARCACHE ),
    .I_ARQOS( gmem_ARQOS ),
    .I_ARPROT( gmem_ARPROT ),
    .I_ARUSER( gmem_ARUSER ),
    .I_ARBURST( gmem_ARBURST ),
    .I_ARREGION( gmem_ARREGION ),
    .I_RVALID( gmem_RVALID ),
    .I_RREADY( gmem_RREADY ),
    .I_RDATA( gmem_RDATA ),
    .I_RID( gmem_RID ),
    .I_RUSER( gmem_RUSER ),
    .I_RRESP( gmem_RRESP ),
    .I_RLAST( gmem_RLAST ),
    .I_AWVALID( gmem_AWVALID ),
    .I_AWREADY( gmem_AWREADY ),
    .I_AWADDR( gmem_AWADDR ),
    .I_AWID( gmem_AWID ),
    .I_AWLEN( gmem_AWLEN ),
    .I_AWSIZE( gmem_AWSIZE ),
    .I_AWLOCK( gmem_AWLOCK ),
    .I_AWCACHE( gmem_AWCACHE ),
    .I_AWQOS( gmem_AWQOS ),
    .I_AWPROT( gmem_AWPROT ),
    .I_AWUSER( gmem_AWUSER ),
    .I_AWBURST( gmem_AWBURST ),
    .I_AWREGION( gmem_AWREGION ),
    .I_WVALID( gmem_WVALID ),
    .I_WREADY( gmem_WREADY ),
    .I_WDATA( gmem_WDATA ),
    .I_WID( gmem_WID ),
    .I_WUSER( gmem_WUSER ),
    .I_WLAST( gmem_WLAST ),
    .I_WSTRB( gmem_WSTRB ),
    .I_BVALID( gmem_BVALID ),
    .I_BREADY( gmem_BREADY ),
    .I_BRESP( gmem_BRESP ),
    .I_BID( gmem_BID ),
    .I_BUSER( gmem_BUSER )
);

bgsub_gmem_offset_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_OFFSET_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_OFFSET_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_OFFSET_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_OFFSET_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_OFFSET_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_OFFSET_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_OFFSET_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_OFFSET_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_OFFSET_CACHE_VALUE ))
bgsub_gmem_offset_m_axi_U(
    .AWVALID( m_axi_gmem_offset_AWVALID ),
    .AWREADY( m_axi_gmem_offset_AWREADY ),
    .AWADDR( m_axi_gmem_offset_AWADDR ),
    .AWID( m_axi_gmem_offset_AWID ),
    .AWLEN( m_axi_gmem_offset_AWLEN ),
    .AWSIZE( m_axi_gmem_offset_AWSIZE ),
    .AWBURST( m_axi_gmem_offset_AWBURST ),
    .AWLOCK( m_axi_gmem_offset_AWLOCK ),
    .AWCACHE( m_axi_gmem_offset_AWCACHE ),
    .AWPROT( m_axi_gmem_offset_AWPROT ),
    .AWQOS( m_axi_gmem_offset_AWQOS ),
    .AWREGION( m_axi_gmem_offset_AWREGION ),
    .AWUSER( m_axi_gmem_offset_AWUSER ),
    .WVALID( m_axi_gmem_offset_WVALID ),
    .WREADY( m_axi_gmem_offset_WREADY ),
    .WDATA( m_axi_gmem_offset_WDATA ),
    .WSTRB( m_axi_gmem_offset_WSTRB ),
    .WLAST( m_axi_gmem_offset_WLAST ),
    .WID( m_axi_gmem_offset_WID ),
    .WUSER( m_axi_gmem_offset_WUSER ),
    .ARVALID( m_axi_gmem_offset_ARVALID ),
    .ARREADY( m_axi_gmem_offset_ARREADY ),
    .ARADDR( m_axi_gmem_offset_ARADDR ),
    .ARID( m_axi_gmem_offset_ARID ),
    .ARLEN( m_axi_gmem_offset_ARLEN ),
    .ARSIZE( m_axi_gmem_offset_ARSIZE ),
    .ARBURST( m_axi_gmem_offset_ARBURST ),
    .ARLOCK( m_axi_gmem_offset_ARLOCK ),
    .ARCACHE( m_axi_gmem_offset_ARCACHE ),
    .ARPROT( m_axi_gmem_offset_ARPROT ),
    .ARQOS( m_axi_gmem_offset_ARQOS ),
    .ARREGION( m_axi_gmem_offset_ARREGION ),
    .ARUSER( m_axi_gmem_offset_ARUSER ),
    .RVALID( m_axi_gmem_offset_RVALID ),
    .RREADY( m_axi_gmem_offset_RREADY ),
    .RDATA( m_axi_gmem_offset_RDATA ),
    .RLAST( m_axi_gmem_offset_RLAST ),
    .RID( m_axi_gmem_offset_RID ),
    .RUSER( m_axi_gmem_offset_RUSER ),
    .RRESP( m_axi_gmem_offset_RRESP ),
    .BVALID( m_axi_gmem_offset_BVALID ),
    .BREADY( m_axi_gmem_offset_BREADY ),
    .BRESP( m_axi_gmem_offset_BRESP ),
    .BID( m_axi_gmem_offset_BID ),
    .BUSER( m_axi_gmem_offset_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( bgsub_gmem_offset_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem_offset_ARVALID ),
    .I_ARREADY( gmem_offset_ARREADY ),
    .I_ARADDR( gmem_offset_ARADDR ),
    .I_ARID( gmem_offset_ARID ),
    .I_ARLEN( gmem_offset_ARLEN ),
    .I_ARSIZE( gmem_offset_ARSIZE ),
    .I_ARLOCK( gmem_offset_ARLOCK ),
    .I_ARCACHE( gmem_offset_ARCACHE ),
    .I_ARQOS( gmem_offset_ARQOS ),
    .I_ARPROT( gmem_offset_ARPROT ),
    .I_ARUSER( gmem_offset_ARUSER ),
    .I_ARBURST( gmem_offset_ARBURST ),
    .I_ARREGION( gmem_offset_ARREGION ),
    .I_RVALID( gmem_offset_RVALID ),
    .I_RREADY( gmem_offset_RREADY ),
    .I_RDATA( gmem_offset_RDATA ),
    .I_RID( gmem_offset_RID ),
    .I_RUSER( gmem_offset_RUSER ),
    .I_RRESP( gmem_offset_RRESP ),
    .I_RLAST( gmem_offset_RLAST ),
    .I_AWVALID( gmem_offset_AWVALID ),
    .I_AWREADY( gmem_offset_AWREADY ),
    .I_AWADDR( gmem_offset_AWADDR ),
    .I_AWID( gmem_offset_AWID ),
    .I_AWLEN( gmem_offset_AWLEN ),
    .I_AWSIZE( gmem_offset_AWSIZE ),
    .I_AWLOCK( gmem_offset_AWLOCK ),
    .I_AWCACHE( gmem_offset_AWCACHE ),
    .I_AWQOS( gmem_offset_AWQOS ),
    .I_AWPROT( gmem_offset_AWPROT ),
    .I_AWUSER( gmem_offset_AWUSER ),
    .I_AWBURST( gmem_offset_AWBURST ),
    .I_AWREGION( gmem_offset_AWREGION ),
    .I_WVALID( gmem_offset_WVALID ),
    .I_WREADY( gmem_offset_WREADY ),
    .I_WDATA( gmem_offset_WDATA ),
    .I_WID( gmem_offset_WID ),
    .I_WUSER( gmem_offset_WUSER ),
    .I_WLAST( gmem_offset_WLAST ),
    .I_WSTRB( gmem_offset_WSTRB ),
    .I_BVALID( gmem_offset_BVALID ),
    .I_BREADY( gmem_offset_BREADY ),
    .I_BRESP( gmem_offset_BRESP ),
    .I_BID( gmem_offset_BID ),
    .I_BUSER( gmem_offset_BUSER )
);

bgsub_Block_proc bgsub_Block_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( bgsub_Block_proc_U0_ap_start ),
    .ap_done( bgsub_Block_proc_U0_ap_done ),
    .ap_continue( bgsub_Block_proc_U0_ap_continue ),
    .ap_idle( bgsub_Block_proc_U0_ap_idle ),
    .ap_ready( bgsub_Block_proc_U0_ap_ready ),
    .init( bgsub_Block_proc_U0_init ),
    .m_axi_bgmodel_AWVALID( bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID ),
    .m_axi_bgmodel_AWREADY( bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY ),
    .m_axi_bgmodel_AWADDR( bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR ),
    .m_axi_bgmodel_AWID( bgsub_Block_proc_U0_m_axi_bgmodel_AWID ),
    .m_axi_bgmodel_AWLEN( bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN ),
    .m_axi_bgmodel_AWSIZE( bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE ),
    .m_axi_bgmodel_AWBURST( bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST ),
    .m_axi_bgmodel_AWLOCK( bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK ),
    .m_axi_bgmodel_AWCACHE( bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE ),
    .m_axi_bgmodel_AWPROT( bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT ),
    .m_axi_bgmodel_AWQOS( bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS ),
    .m_axi_bgmodel_AWREGION( bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION ),
    .m_axi_bgmodel_AWUSER( bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER ),
    .m_axi_bgmodel_WVALID( bgsub_Block_proc_U0_m_axi_bgmodel_WVALID ),
    .m_axi_bgmodel_WREADY( bgsub_Block_proc_U0_m_axi_bgmodel_WREADY ),
    .m_axi_bgmodel_WDATA( bgsub_Block_proc_U0_m_axi_bgmodel_WDATA ),
    .m_axi_bgmodel_WSTRB( bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB ),
    .m_axi_bgmodel_WLAST( bgsub_Block_proc_U0_m_axi_bgmodel_WLAST ),
    .m_axi_bgmodel_WID( bgsub_Block_proc_U0_m_axi_bgmodel_WID ),
    .m_axi_bgmodel_WUSER( bgsub_Block_proc_U0_m_axi_bgmodel_WUSER ),
    .m_axi_bgmodel_ARVALID( bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID ),
    .m_axi_bgmodel_ARREADY( bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY ),
    .m_axi_bgmodel_ARADDR( bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR ),
    .m_axi_bgmodel_ARID( bgsub_Block_proc_U0_m_axi_bgmodel_ARID ),
    .m_axi_bgmodel_ARLEN( bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN ),
    .m_axi_bgmodel_ARSIZE( bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE ),
    .m_axi_bgmodel_ARBURST( bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST ),
    .m_axi_bgmodel_ARLOCK( bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK ),
    .m_axi_bgmodel_ARCACHE( bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE ),
    .m_axi_bgmodel_ARPROT( bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT ),
    .m_axi_bgmodel_ARQOS( bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS ),
    .m_axi_bgmodel_ARREGION( bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION ),
    .m_axi_bgmodel_ARUSER( bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER ),
    .m_axi_bgmodel_RVALID( bgsub_Block_proc_U0_m_axi_bgmodel_RVALID ),
    .m_axi_bgmodel_RREADY( bgsub_Block_proc_U0_m_axi_bgmodel_RREADY ),
    .m_axi_bgmodel_RDATA( bgsub_Block_proc_U0_m_axi_bgmodel_RDATA ),
    .m_axi_bgmodel_RLAST( bgsub_Block_proc_U0_m_axi_bgmodel_RLAST ),
    .m_axi_bgmodel_RID( bgsub_Block_proc_U0_m_axi_bgmodel_RID ),
    .m_axi_bgmodel_RUSER( bgsub_Block_proc_U0_m_axi_bgmodel_RUSER ),
    .m_axi_bgmodel_RRESP( bgsub_Block_proc_U0_m_axi_bgmodel_RRESP ),
    .m_axi_bgmodel_BVALID( bgsub_Block_proc_U0_m_axi_bgmodel_BVALID ),
    .m_axi_bgmodel_BREADY( bgsub_Block_proc_U0_m_axi_bgmodel_BREADY ),
    .m_axi_bgmodel_BRESP( bgsub_Block_proc_U0_m_axi_bgmodel_BRESP ),
    .m_axi_bgmodel_BID( bgsub_Block_proc_U0_m_axi_bgmodel_BID ),
    .m_axi_bgmodel_BUSER( bgsub_Block_proc_U0_m_axi_bgmodel_BUSER ),
    .bgmodel1( bgsub_Block_proc_U0_bgmodel1 ),
    .m_axi_frame_out_AWVALID( bgsub_Block_proc_U0_m_axi_frame_out_AWVALID ),
    .m_axi_frame_out_AWREADY( bgsub_Block_proc_U0_m_axi_frame_out_AWREADY ),
    .m_axi_frame_out_AWADDR( bgsub_Block_proc_U0_m_axi_frame_out_AWADDR ),
    .m_axi_frame_out_AWID( bgsub_Block_proc_U0_m_axi_frame_out_AWID ),
    .m_axi_frame_out_AWLEN( bgsub_Block_proc_U0_m_axi_frame_out_AWLEN ),
    .m_axi_frame_out_AWSIZE( bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE ),
    .m_axi_frame_out_AWBURST( bgsub_Block_proc_U0_m_axi_frame_out_AWBURST ),
    .m_axi_frame_out_AWLOCK( bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK ),
    .m_axi_frame_out_AWCACHE( bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE ),
    .m_axi_frame_out_AWPROT( bgsub_Block_proc_U0_m_axi_frame_out_AWPROT ),
    .m_axi_frame_out_AWQOS( bgsub_Block_proc_U0_m_axi_frame_out_AWQOS ),
    .m_axi_frame_out_AWREGION( bgsub_Block_proc_U0_m_axi_frame_out_AWREGION ),
    .m_axi_frame_out_AWUSER( bgsub_Block_proc_U0_m_axi_frame_out_AWUSER ),
    .m_axi_frame_out_WVALID( bgsub_Block_proc_U0_m_axi_frame_out_WVALID ),
    .m_axi_frame_out_WREADY( bgsub_Block_proc_U0_m_axi_frame_out_WREADY ),
    .m_axi_frame_out_WDATA( bgsub_Block_proc_U0_m_axi_frame_out_WDATA ),
    .m_axi_frame_out_WSTRB( bgsub_Block_proc_U0_m_axi_frame_out_WSTRB ),
    .m_axi_frame_out_WLAST( bgsub_Block_proc_U0_m_axi_frame_out_WLAST ),
    .m_axi_frame_out_WID( bgsub_Block_proc_U0_m_axi_frame_out_WID ),
    .m_axi_frame_out_WUSER( bgsub_Block_proc_U0_m_axi_frame_out_WUSER ),
    .m_axi_frame_out_ARVALID( bgsub_Block_proc_U0_m_axi_frame_out_ARVALID ),
    .m_axi_frame_out_ARREADY( bgsub_Block_proc_U0_m_axi_frame_out_ARREADY ),
    .m_axi_frame_out_ARADDR( bgsub_Block_proc_U0_m_axi_frame_out_ARADDR ),
    .m_axi_frame_out_ARID( bgsub_Block_proc_U0_m_axi_frame_out_ARID ),
    .m_axi_frame_out_ARLEN( bgsub_Block_proc_U0_m_axi_frame_out_ARLEN ),
    .m_axi_frame_out_ARSIZE( bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE ),
    .m_axi_frame_out_ARBURST( bgsub_Block_proc_U0_m_axi_frame_out_ARBURST ),
    .m_axi_frame_out_ARLOCK( bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK ),
    .m_axi_frame_out_ARCACHE( bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE ),
    .m_axi_frame_out_ARPROT( bgsub_Block_proc_U0_m_axi_frame_out_ARPROT ),
    .m_axi_frame_out_ARQOS( bgsub_Block_proc_U0_m_axi_frame_out_ARQOS ),
    .m_axi_frame_out_ARREGION( bgsub_Block_proc_U0_m_axi_frame_out_ARREGION ),
    .m_axi_frame_out_ARUSER( bgsub_Block_proc_U0_m_axi_frame_out_ARUSER ),
    .m_axi_frame_out_RVALID( bgsub_Block_proc_U0_m_axi_frame_out_RVALID ),
    .m_axi_frame_out_RREADY( bgsub_Block_proc_U0_m_axi_frame_out_RREADY ),
    .m_axi_frame_out_RDATA( bgsub_Block_proc_U0_m_axi_frame_out_RDATA ),
    .m_axi_frame_out_RLAST( bgsub_Block_proc_U0_m_axi_frame_out_RLAST ),
    .m_axi_frame_out_RID( bgsub_Block_proc_U0_m_axi_frame_out_RID ),
    .m_axi_frame_out_RUSER( bgsub_Block_proc_U0_m_axi_frame_out_RUSER ),
    .m_axi_frame_out_RRESP( bgsub_Block_proc_U0_m_axi_frame_out_RRESP ),
    .m_axi_frame_out_BVALID( bgsub_Block_proc_U0_m_axi_frame_out_BVALID ),
    .m_axi_frame_out_BREADY( bgsub_Block_proc_U0_m_axi_frame_out_BREADY ),
    .m_axi_frame_out_BRESP( bgsub_Block_proc_U0_m_axi_frame_out_BRESP ),
    .m_axi_frame_out_BID( bgsub_Block_proc_U0_m_axi_frame_out_BID ),
    .m_axi_frame_out_BUSER( bgsub_Block_proc_U0_m_axi_frame_out_BUSER ),
    .frame_out2( bgsub_Block_proc_U0_frame_out2 ),
    .frame_in( bgsub_Block_proc_U0_frame_in )
);



always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_bgsub_Block_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_bgsub_Block_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_bgsub_Block_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == bgsub_Block_proc_U0_ap_done)) begin
            ap_reg_procdone_bgsub_Block_proc_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_CS <= ap_const_logic_0;
end

always @ (bgsub_Block_proc_U0_ap_idle) begin
    if ((ap_const_logic_1 == bgsub_Block_proc_U0_ap_idle)) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (bgsub_Block_proc_U0_ap_done) begin
    if ((ap_const_logic_1 == bgsub_Block_proc_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

assign ap_done = ap_sig_hs_done;

assign ap_ready = ap_sig_top_allready;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sig_hs_continue = ap_const_logic_1;

assign ap_sig_top_allready = bgsub_Block_proc_U0_ap_ready;

assign bgsub_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign bgsub_Block_proc_U0_ap_continue = ap_const_logic_1;

assign bgsub_Block_proc_U0_ap_start = ap_start;

assign bgsub_Block_proc_U0_bgmodel1 = bgmodel;

assign bgsub_Block_proc_U0_frame_in = frame_in;

assign bgsub_Block_proc_U0_frame_out2 = frame_out;

assign bgsub_Block_proc_U0_init = init;

assign bgsub_Block_proc_U0_m_axi_bgmodel_ARREADY = gmem_offset_ARREADY;

assign bgsub_Block_proc_U0_m_axi_bgmodel_AWREADY = gmem_offset_AWREADY;

assign bgsub_Block_proc_U0_m_axi_bgmodel_BID = gmem_offset_BID;

assign bgsub_Block_proc_U0_m_axi_bgmodel_BRESP = gmem_offset_BRESP;

assign bgsub_Block_proc_U0_m_axi_bgmodel_BUSER = gmem_offset_BUSER;

assign bgsub_Block_proc_U0_m_axi_bgmodel_BVALID = gmem_offset_BVALID;

assign bgsub_Block_proc_U0_m_axi_bgmodel_RDATA = gmem_offset_RDATA;

assign bgsub_Block_proc_U0_m_axi_bgmodel_RID = gmem_offset_RID;

assign bgsub_Block_proc_U0_m_axi_bgmodel_RLAST = gmem_offset_RLAST;

assign bgsub_Block_proc_U0_m_axi_bgmodel_RRESP = gmem_offset_RRESP;

assign bgsub_Block_proc_U0_m_axi_bgmodel_RUSER = gmem_offset_RUSER;

assign bgsub_Block_proc_U0_m_axi_bgmodel_RVALID = gmem_offset_RVALID;

assign bgsub_Block_proc_U0_m_axi_bgmodel_WREADY = gmem_offset_WREADY;

assign bgsub_Block_proc_U0_m_axi_frame_out_ARREADY = gmem_ARREADY;

assign bgsub_Block_proc_U0_m_axi_frame_out_AWREADY = gmem_AWREADY;

assign bgsub_Block_proc_U0_m_axi_frame_out_BID = gmem_BID;

assign bgsub_Block_proc_U0_m_axi_frame_out_BRESP = gmem_BRESP;

assign bgsub_Block_proc_U0_m_axi_frame_out_BUSER = gmem_BUSER;

assign bgsub_Block_proc_U0_m_axi_frame_out_BVALID = gmem_BVALID;

assign bgsub_Block_proc_U0_m_axi_frame_out_RDATA = gmem_RDATA;

assign bgsub_Block_proc_U0_m_axi_frame_out_RID = gmem_RID;

assign bgsub_Block_proc_U0_m_axi_frame_out_RLAST = gmem_RLAST;

assign bgsub_Block_proc_U0_m_axi_frame_out_RRESP = gmem_RRESP;

assign bgsub_Block_proc_U0_m_axi_frame_out_RUSER = gmem_RUSER;

assign bgsub_Block_proc_U0_m_axi_frame_out_RVALID = gmem_RVALID;

assign bgsub_Block_proc_U0_m_axi_frame_out_WREADY = gmem_WREADY;

assign bgsub_CRTL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign bgsub_gmem_m_axi_U_ap_dummy_ce = ap_const_logic_1;

assign bgsub_gmem_offset_m_axi_U_ap_dummy_ce = ap_const_logic_1;

assign gmem_ARADDR = bgsub_Block_proc_U0_m_axi_frame_out_ARADDR;

assign gmem_ARBURST = bgsub_Block_proc_U0_m_axi_frame_out_ARBURST;

assign gmem_ARCACHE = bgsub_Block_proc_U0_m_axi_frame_out_ARCACHE;

assign gmem_ARID = bgsub_Block_proc_U0_m_axi_frame_out_ARID;

assign gmem_ARLEN = bgsub_Block_proc_U0_m_axi_frame_out_ARLEN;

assign gmem_ARLOCK = bgsub_Block_proc_U0_m_axi_frame_out_ARLOCK;

assign gmem_ARPROT = bgsub_Block_proc_U0_m_axi_frame_out_ARPROT;

assign gmem_ARQOS = bgsub_Block_proc_U0_m_axi_frame_out_ARQOS;

assign gmem_ARREGION = bgsub_Block_proc_U0_m_axi_frame_out_ARREGION;

assign gmem_ARSIZE = bgsub_Block_proc_U0_m_axi_frame_out_ARSIZE;

assign gmem_ARUSER = bgsub_Block_proc_U0_m_axi_frame_out_ARUSER;

assign gmem_ARVALID = bgsub_Block_proc_U0_m_axi_frame_out_ARVALID;

assign gmem_AWADDR = bgsub_Block_proc_U0_m_axi_frame_out_AWADDR;

assign gmem_AWBURST = bgsub_Block_proc_U0_m_axi_frame_out_AWBURST;

assign gmem_AWCACHE = bgsub_Block_proc_U0_m_axi_frame_out_AWCACHE;

assign gmem_AWID = bgsub_Block_proc_U0_m_axi_frame_out_AWID;

assign gmem_AWLEN = bgsub_Block_proc_U0_m_axi_frame_out_AWLEN;

assign gmem_AWLOCK = bgsub_Block_proc_U0_m_axi_frame_out_AWLOCK;

assign gmem_AWPROT = bgsub_Block_proc_U0_m_axi_frame_out_AWPROT;

assign gmem_AWQOS = bgsub_Block_proc_U0_m_axi_frame_out_AWQOS;

assign gmem_AWREGION = bgsub_Block_proc_U0_m_axi_frame_out_AWREGION;

assign gmem_AWSIZE = bgsub_Block_proc_U0_m_axi_frame_out_AWSIZE;

assign gmem_AWUSER = bgsub_Block_proc_U0_m_axi_frame_out_AWUSER;

assign gmem_AWVALID = bgsub_Block_proc_U0_m_axi_frame_out_AWVALID;

assign gmem_BREADY = bgsub_Block_proc_U0_m_axi_frame_out_BREADY;

assign gmem_RREADY = bgsub_Block_proc_U0_m_axi_frame_out_RREADY;

assign gmem_WDATA = bgsub_Block_proc_U0_m_axi_frame_out_WDATA;

assign gmem_WID = bgsub_Block_proc_U0_m_axi_frame_out_WID;

assign gmem_WLAST = bgsub_Block_proc_U0_m_axi_frame_out_WLAST;

assign gmem_WSTRB = bgsub_Block_proc_U0_m_axi_frame_out_WSTRB;

assign gmem_WUSER = bgsub_Block_proc_U0_m_axi_frame_out_WUSER;

assign gmem_WVALID = bgsub_Block_proc_U0_m_axi_frame_out_WVALID;

assign gmem_offset_ARADDR = bgsub_Block_proc_U0_m_axi_bgmodel_ARADDR;

assign gmem_offset_ARBURST = bgsub_Block_proc_U0_m_axi_bgmodel_ARBURST;

assign gmem_offset_ARCACHE = bgsub_Block_proc_U0_m_axi_bgmodel_ARCACHE;

assign gmem_offset_ARID = bgsub_Block_proc_U0_m_axi_bgmodel_ARID;

assign gmem_offset_ARLEN = bgsub_Block_proc_U0_m_axi_bgmodel_ARLEN;

assign gmem_offset_ARLOCK = bgsub_Block_proc_U0_m_axi_bgmodel_ARLOCK;

assign gmem_offset_ARPROT = bgsub_Block_proc_U0_m_axi_bgmodel_ARPROT;

assign gmem_offset_ARQOS = bgsub_Block_proc_U0_m_axi_bgmodel_ARQOS;

assign gmem_offset_ARREGION = bgsub_Block_proc_U0_m_axi_bgmodel_ARREGION;

assign gmem_offset_ARSIZE = bgsub_Block_proc_U0_m_axi_bgmodel_ARSIZE;

assign gmem_offset_ARUSER = bgsub_Block_proc_U0_m_axi_bgmodel_ARUSER;

assign gmem_offset_ARVALID = bgsub_Block_proc_U0_m_axi_bgmodel_ARVALID;

assign gmem_offset_AWADDR = bgsub_Block_proc_U0_m_axi_bgmodel_AWADDR;

assign gmem_offset_AWBURST = bgsub_Block_proc_U0_m_axi_bgmodel_AWBURST;

assign gmem_offset_AWCACHE = bgsub_Block_proc_U0_m_axi_bgmodel_AWCACHE;

assign gmem_offset_AWID = bgsub_Block_proc_U0_m_axi_bgmodel_AWID;

assign gmem_offset_AWLEN = bgsub_Block_proc_U0_m_axi_bgmodel_AWLEN;

assign gmem_offset_AWLOCK = bgsub_Block_proc_U0_m_axi_bgmodel_AWLOCK;

assign gmem_offset_AWPROT = bgsub_Block_proc_U0_m_axi_bgmodel_AWPROT;

assign gmem_offset_AWQOS = bgsub_Block_proc_U0_m_axi_bgmodel_AWQOS;

assign gmem_offset_AWREGION = bgsub_Block_proc_U0_m_axi_bgmodel_AWREGION;

assign gmem_offset_AWSIZE = bgsub_Block_proc_U0_m_axi_bgmodel_AWSIZE;

assign gmem_offset_AWUSER = bgsub_Block_proc_U0_m_axi_bgmodel_AWUSER;

assign gmem_offset_AWVALID = bgsub_Block_proc_U0_m_axi_bgmodel_AWVALID;

assign gmem_offset_BREADY = bgsub_Block_proc_U0_m_axi_bgmodel_BREADY;

assign gmem_offset_RREADY = bgsub_Block_proc_U0_m_axi_bgmodel_RREADY;

assign gmem_offset_WDATA = bgsub_Block_proc_U0_m_axi_bgmodel_WDATA;

assign gmem_offset_WID = bgsub_Block_proc_U0_m_axi_bgmodel_WID;

assign gmem_offset_WLAST = bgsub_Block_proc_U0_m_axi_bgmodel_WLAST;

assign gmem_offset_WSTRB = bgsub_Block_proc_U0_m_axi_bgmodel_WSTRB;

assign gmem_offset_WUSER = bgsub_Block_proc_U0_m_axi_bgmodel_WUSER;

assign gmem_offset_WVALID = bgsub_Block_proc_U0_m_axi_bgmodel_WVALID;


endmodule //bgsub

